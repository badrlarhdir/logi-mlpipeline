name: Main pipeline
'on': 
  workflow_call:
    inputs:
      EC2_INSTANCE_TYPE:
        description: 'EC2 instance type'
        required: true
        type: string
      EC2_TARGET_SIZE:
        description: 'EC2 target size'
        required: true
        type: 'string'
        default: '30'
      EXPERIMENT_ID:
        description: Experiment ID to identify the run in S3
        required: true
        type: string
    secrets:
      GH_PERSONAL_ACCESS_TOKEN:
        description: 'GitHub Personal Access Token'
        required: true
permissions: write-all
jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.ROLE_TO_ASSUME }}
          role-session-name: ${{ vars.ROLE_SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Convert EC2_TARGET_SIZE to int
        id: convert-ec2-target-size
        run: echo "EC2_TARGET_SIZE=${{ inputs.EC2_TARGET_SIZE }}" >> $GITHUB_OUTPUT
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: badrlarhdir/ec2-github-runner@v3
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ${{ vars.EC2_IMAGE_ID }}
          ec2-instance-type: ${{ inputs.EC2_INSTANCE_TYPE }}
          subnet-id: ${{ vars.SUBNET_ID }}
          security-group-id: ${{ vars.SECURITY_GROUP_ID }}
          root-volume-size: ${{ steps.convert-ec2-target-size.outputs.EC2_TARGET_SIZE }}
  pipeline:
    name: Runs the ML Pipeline
    needs: start-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner
    env:
      EC2_INSTANCE_TYPE: ${{ inputs.EC2_INSTANCE_TYPE }}
      EC2_TARGET_SIZE: ${{ inputs.EC2_TARGET_SIZE }}
      EXPERIMENT_ID: ${{ inputs.EXPERIMENT_ID }}
    steps:
      - uses: actions/checkout@v3
      - uses: fregante/setup-git-user@v1
      - name: Echo variables
        run: 'echo "role-to-assume : ${{ vars.ROLE_TO_ASSUME }}"
          echo "role-session-name: ${{ vars.ROLE_SESSION_NAME }}"
          echo "aws-region: ${{ vars.AWS_REGION }}"
          echo "ec2_instance_type: ${{ inputs.EC2_INSTANCE_TYPE }}"
          echo "ec2_target_size: ${{ inputs.EC2_TARGET_SIZE }}"
          '
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.ROLE_TO_ASSUME }}
          role-session-name: ${{ vars.ROLE_SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: iterative/setup-cml@v1
      - uses: iterative/setup-dvc@v1
      - name: Install Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Create & Activate virtual environment
        run: |
          pip3 install virtualenv
          virtualenv venv
          source venv/bin/activate
      - name: Install requirements
        run: |
          pip install -r requirements.txt

          #to make papermill work on the created virtualenv
          python -m ipykernel install --user --name venv --display-name 'venv'

      - name: DVC pipeline & CML job
        env:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ github.token }}
  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - pipeline # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.ROLE_TO_ASSUME }}
          role-session-name: ${{ vars.ROLE_SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Stop EC2 runner
        uses: badrlarhdir/ec2-github-runner@v3
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
