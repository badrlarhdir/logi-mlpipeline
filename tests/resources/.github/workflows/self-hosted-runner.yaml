name: Self Hosted Runner ML-pipeline
'on':
  repository_dispatch:
    types:
    - mlpipeline-main
concurrency:
  group: ${{ github.repository }}
  cancel-in-progress: true
permissions: write-all
jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ vars.ROLE_TO_ASSUME }}
        role-session-name: ${{ vars.ROLE_SESSION_NAME }}
        aws-region: ${{ vars.AWS_REGION }}
    - name: Start EC2 runner
      id: start-ec2-runner
      uses: badrlarhdir/ec2-github-runner@v3
      with:
        mode: start
        github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
        ec2-image-id: ${{ vars.EC2_IMAGE_ID }}
        ec2-instance-type: ${{ github.event.client_payload.EC2_INSTANCE_TYPE }}
        subnet-id: ${{ vars.SUBNET_ID }}
        security-group-id: ${{ vars.SECURITY_GROUP_ID }}
        root-volume-size: ${{ github.event.client_payload.EC2_TARGET_SIZE }}
  pipeline:
    name: Run the Pipeline
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}
    steps:
    - uses: actions/checkout@v3
    - uses: fregante/setup-git-user@v1
    - name: Echo variables
      run: 'echo "role-to-assume : ${{ vars.ROLE_TO_ASSUME }}" echo "role-session-name:
        ${{ vars.ROLE_SESSION_NAME }}" echo "aws-region: ${{ vars.AWS_REGION }}" echo
        "ec2_instance_type: ${{ github.event.client_payload.EC2_INSTANCE_TYPE }}"
        echo "ec2_target_size: ${{ github.event.client_payload.EC2_TARGET_SIZE }}" '
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ vars.ROLE_TO_ASSUME }}
        role-session-name: ${{ vars.ROLE_SESSION_NAME }}
        aws-region: ${{ vars.AWS_REGION }}
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - uses: iterative/setup-cml@v1
    - uses: iterative/setup-dvc@v1
    - name: Install Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Create & Activate virtual environment
      run: 'pip3 install virtualenv

        virtualenv venv

        source venv/bin/activate

        '
    - name: Install requirements
      run: 'source setup_env/setup_env.sh


        #to make papermill work on the created virtualenv

        python -m ipykernel install --user --name venv --display-name ''venv''

        '
    - name: DVC pipeline & CML job
      env:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        GH_TOKEN: ${{ github.token }}
      run: '# Reproduce pipeline if any changes detected in dependencies

        mlp run_local -p main

        # Output experiment results

        dvc exp show


        # Output the hash commit into the report

        git log --pretty=format:''%h'' -n 1 >> report.md


        echo ''# Model metrics:'' >> report.md

        echo ''Plots:'' >> report.md

        echo ''![model metrics](./data/model_metrics.png)'' >> report.md

        cml comment create report.md

        '
  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
    - start-runner
    - pipeline
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ vars.ROLE_TO_ASSUME }}
        role-session-name: ${{ vars.ROLE_SESSION_NAME }}
        aws-region: ${{ vars.AWS_REGION }}
    - name: Stop EC2 runner
      uses: badrlarhdir/ec2-github-runner@v3
      with:
        mode: stop
        github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
        label: ${{ needs.start-runner.outputs.label }}
        ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
